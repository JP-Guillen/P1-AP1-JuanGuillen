@page "/Registro/Index"
@inject NavigationManager navigation
@inject RegistroServices registroServices
@rendermode InteractiveServer

<PageTitle>Registro</PageTitle>
<div class="container">
	<div class="card shadow-lg">
		<div class="card-header d-flex justify-content-between align-items-center">
			<h1 class="card-title"><strong>Registro Huacales</strong></h1>
			<a href="/Registro/crear" class="btn btn-primary bi bi-plus-square"> Crear</a>
		</div>

		<div class="card-body">
			<div class="row mb-3">
				<div class="col-md-3">
					<label class="col-form-label"><strong>Filtrar por:</strong></label>
					<InputSelect class="form-select" @bind-Value="Filtro">
						<option value="">Seleccionar</option>
						<option value="Nombre">Nombre</option>
						<option value="Precio">Precio</option>
						<option value="Cantidad">Cantidad</option>
					</InputSelect>
				</div>

				<div class="col-md-5">
					<label class="col-form-label"><strong>Buscar:</strong></label>
					<InputText class="form-control" @bind-Value="valor" />
				</div>

				<div class="col-md-2 d-flex align-items-end">
					<button class="btn btn-success w-100 bi bi-search" @onclick="Buscar"> Buscar</button>
				</div>
			</div>

			<div class="table-responsive">
				<table class="table table-striped text-center">
					<thead class="table">
						<tr>
							<th>IdEntrada</th>
							<th>Nombre</th>
							<th>Cantidad</th>
							<th>Precio</th>
							<th>Importe</th>
							<th>Acciones</th>
						</tr>
					</thead>
					<tbody>
						@foreach (var Huacal in Lista)
						{
							<tr>
								<td>@Huacal.IdEntrada</td>
								<td>@Huacal.NombreCliente</td>
								<td>@Huacal.cantidad</td>
								<td>@Huacal.precio</td>
								<td>@Huacal.Importe</td>
								<td>
									<a href="/Registro/edit/@Huacal.IdEntrada" class="btn btn-primary bi bi-pencil"> Editar</a>
								</td>
							</tr>
						}
					</tbody>
				</table>
			</div>
		</div>

		<div class="card-footer d-flex justify-content-between bg-light">
			<strong>Total Cantidad: @Lista.Sum(a => a.cantidad)</strong>
			<strong>Total Importe: @Lista.Sum(a => a.Importe)</strong>
		</div>
	</div>
</div>

@code {
	public string Filtro;
	public string valor;
	private List<EntradasHuacales> Lista { get; set; } = new List<EntradasHuacales>();

	protected override async Task OnInitializedAsync()
	{
		Lista = await registroServices.Listar(r => r.IdEntrada > 0);
		CalcularImportes();
	}

	private void CalcularImportes()
	{
		foreach (var h in Lista)
		{
			
			h.precio = h.EntradasHuacalesDetalles.Sum(d => d.Cantidad * d.Precio);

		
			h.Importe = h.precio;
		}
	}

	private async Task Buscar()
	{
		if (string.IsNullOrWhiteSpace(Filtro) || string.IsNullOrWhiteSpace(valor))
		{
			Lista = await registroServices.Listar(r => r.IdEntrada > 0);
		}
		else
		{
			switch (Filtro)
			{
				case "Nombre":
					Lista = await registroServices.Listar(r => r.NombreCliente.Contains(valor));
					break;
				case "Precio":
					if (double.TryParse(valor, out double p))
						Lista = await registroServices.Listar(r => r.EntradasHuacalesDetalles.Sum(d => d.Cantidad * d.Precio) == p);
					break;
				case "Cantidad":
					if (int.TryParse(valor, out int c))
						Lista = await registroServices.Listar(r => r.cantidad == c);
					break;
			}
		}
		CalcularImportes();
	}
}
