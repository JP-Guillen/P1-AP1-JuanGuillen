@page "/Registro/edit/{IdEntrada:int}"
@inject RegistroServices registroServices
@inject NavigationManager navigation
@inject ToastService toastService
@rendermode InteractiveServer

<PageTitle>Editar Registro</PageTitle>

<div class="container">
    <EditForm Model="huacal" OnValidSubmit="GuardarCambios">
        <DataAnnotationsValidator />
        <ValidationSummary />

        <div class="card shadow-lg">
            <div class="card-header text-center">
                <h4 class="card-title">Editar Registro</h4>
            </div>

            <div class="card-body">
                <div class="mb-3">
                    <label class="form-label"><strong>Nombre Cliente</strong></label>
                    <InputText class="form-control" @bind-Value="huacal.NombreCliente" />
                    <ValidationMessage For="(() => huacal.NombreCliente)" />
                </div>

                <div class="mb-3">
                    <label class="form-label"><strong>Fecha</strong></label>
                    <InputDate class="form-control" @bind-Value="huacal.fecha" />
                    <ValidationMessage For="(() => huacal.fecha)" />
                </div>

                <div class="row">
                    <div class="col-md-6">
                        <label class="form-label"><strong>Precio Unitario</strong></label>
                        <InputNumber class="form-control" @bind-Value="huacal.precio" readonly />
                    </div>

                    <div class="col-md-6">
                        <label class="form-label"><strong>Cantidad Total</strong></label>
                        <InputNumber class="form-control" @bind-Value="huacal.cantidad" readonly />
                    </div>
                </div>

                <hr />
                <h5 class="text-center mt-4">Detalles de Huacales</h5>

                <div class="border p-3 rounded">
                    <div class="row g-3 align-items-end">
                        <div class="col-md-4">
                            <label class="form-label"><strong>Tipo de Huacal</strong></label>
                            <select class="form-select" @bind="nuevoDetalle.TipoId">
                                <option value="0">-- Seleccione un tipo --</option>
                                @foreach (var tipo in tiposHuacales)
                                {
                                    <option value="@tipo.TipoId">@tipo.Descripcion</option>
                                }
                            </select>
                        </div>

                        <div class="col-md-3">
                            <label class="form-label"><strong>Cantidad</strong></label>
                            <InputNumber class="form-control" @bind-Value="nuevoDetalle.Cantidad" />
                            
                        </div>

                        <div class="col-md-3">
                            <label class="form-label"><strong>Precio</strong></label>
                            <InputNumber class="form-control" @bind-Value="nuevoDetalle.Precio" />
                            
                        </div>

                        <div class="col-md-2 d-flex">
                            <button type="button" class="btn btn-success w-100 mt-4" @onclick="AgregarDetalle">
                                <i class="bi bi-plus-circle"></i> Agregar
                            </button>
                        </div>
                    </div>

                    <table class="table table-bordered table-striped mt-3">
                        <thead class="table-primary text-center">
                            <tr>
                                <th>Tipo de Huacal</th>
                                <th>Cantidad</th>
                                <th>Precio</th>
                                <th>Subtotal</th>
                                <th>Acción</th>
                            </tr>
                        </thead>
                        <tbody>
                            @if (detalles.Count == 0)
                            {
                                <tr class="text-center">
                                    <td colspan="5">No hay detalles agregados</td>
                                </tr>
                            }
                            else
                            {
                                @for (int i = 0; i < detalles.Count; i++)
                                {
                                    var det = detalles[i];
                                    <tr>
                                        <td>
                                            <select class="form-select" @bind="det.TipoId">
                                                @foreach (var tipo in tiposHuacales)
                                                {
                                                    <option value="@tipo.TipoId">@tipo.Descripcion</option>
                                                }
                                            </select>
                                        </td>
                                        <td><InputNumber class="form-control" @bind-Value="det.Cantidad" /></td>
                                        
                                        <td><InputNumber class="form-control" @bind-Value="det.Precio" /></td>
                                       
                                        <td>@(det.Cantidad* det.Precio)</td>
                                        <td class="text-center">
                                            <button type="button" class="btn btn-danger btn-sm bi bi-trash"
                                                    @onclick="() => RemoverDetalle(det)">
                                                Eliminar
                                            </button>

                                        </td>
                                    </tr>
                                }
                            }
                        </tbody>
                    </table>
                </div>
            </div>

            <div class="card-footer d-flex justify-content-between bg-light">
                <a href="/Registro/Index" class="btn btn-secondary">
                    <span class="bi bi-arrow-left"></span> Volver
                </a>

                <div>
                    <button type="button" class="btn btn-danger me-2" @onclick="MostrarModal">
                        <i class="bi bi-trash"></i> Eliminar Registro
                    </button>

                    <button type="submit" class="btn btn-primary bi bi-floppy"> Modificar</button>
                </div>
            </div>
        </div>
    </EditForm>
</div>

@if (mostrarModal)
{
    <div class="modal fade show d-block" tabindex="-1" style="background-color: rgba(0,0,0,0.5);">
        <div class="modal-dialog modal-dialog-centered">
            <div class="modal-content">
                <div class="modal-header bg-danger text-white">
                    <h5 class="modal-title">Confirmar eliminación</h5>
                    <button type="button" class="btn-close" @onclick="CerrarModal"></button>
                </div>
                <div class="modal-body">
                    <p>¿Desea eliminar este registro completamente?</p>
                </div>
                <div class="modal-footer">
                    <button class="btn btn-secondary" @onclick="CerrarModal">Cancelar</button>
                    <button class="btn btn-danger" @onclick="ConfirmarEliminacion">Eliminar</button>
                </div>
            </div>
        </div>
    </div>
}

@code {
    [Parameter] public int IdEntrada { get; set; }
    public EntradasHuacales huacal { get; set; } = new EntradasHuacales();
    private List<EntradasHuacalesDetalle> detalles { get; set; } = new();
    private EntradasHuacalesDetalle nuevoDetalle { get; set;} = new();
    private List<TiposHuacales> tiposHuacales = new();
    private bool mostrarModal = false;

    protected override async Task OnInitializedAsync()
    {
        tiposHuacales = await registroServices.ListarTipos();
        huacal = await registroServices.Buscar(IdEntrada) ?? new EntradasHuacales();
        detalles = huacal.EntradasHuacalesDetalles?.ToList() ?? new List<EntradasHuacalesDetalle>();
        CalcularTotal();
    }

    private void CalcularTotal()
    {
        huacal.cantidad = detalles.Sum(d => d.Cantidad);
        huacal.precio = detalles.Sum(d => d.Precio);
    }

    private async Task AgregarDetalle()
    {
        if (nuevoDetalle.TipoId == 0 || nuevoDetalle.Cantidad <= 0 || nuevoDetalle.Precio <= 0)
        {
            toastService.ShowWarning("Debe seleccionar un tipo y colocar cantidad y precio válidos.");
            return;
        }

        nuevoDetalle.IdEntrada = huacal.IdEntrada;

        detalles.Add(new EntradasHuacalesDetalle
        {
            TipoId = nuevoDetalle.TipoId,
            Cantidad = nuevoDetalle.Cantidad,
            Precio = nuevoDetalle.Precio,
            IdEntrada = huacal.IdEntrada
        });
        await registroServices.AfectarExistencia(new EntradasHuacalesDetalle[] { nuevoDetalle }, RegistroServices.TipoOperacion.Suma);

        nuevoDetalle = new EntradasHuacalesDetalle();
        CalcularTotal();
    }





    private async Task RemoverDetalle(EntradasHuacalesDetalle detalle)
    {
        detalles.Remove(detalle);
        await registroServices.AfectarExistencia(new EntradasHuacalesDetalle[] { detalle }, RegistroServices.TipoOperacion.Resta);

        CalcularTotal();
    }


    

    private async Task GuardarCambios()
    {
        CalcularTotal();

      
        huacal.EntradasHuacalesDetalles = new List<EntradasHuacalesDetalle>(detalles);

        if (await registroServices.Modificar(huacal))
        {
            toastService.ShowSuccess("Registro modificado correctamente.");
            navigation.NavigateTo("/Registro/Index");
        }
        else
        {
            toastService.ShowError("Error al modificar el registro.");
        }
    }


    private void MostrarModal() => mostrarModal = true;
    private void CerrarModal() => mostrarModal = false;

    private async Task ConfirmarEliminacion()
    {
        mostrarModal = false;
        if (await registroServices.Eliminar(huacal.IdEntrada))
        {
            toastService.ShowSuccess("Registro eliminado correctamente.");
            navigation.NavigateTo("/Registro/Index");
        }
        else
        {
            toastService.ShowError("No se pudo eliminar el registro.");
        }
    }
}
